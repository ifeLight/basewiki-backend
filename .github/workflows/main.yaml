name: Build, Test and Deploy to Cloud Run

on:
    push:
        branches:
        - main

env:
    PROJECT_ID: basewiki # Change to your GCP project ID
    SERVICE: basewiki-backend # Change to your desired service name
    REGION: us-central1 # Change to your desired region

jobs:
    ci-cd:
        runs-on: ubuntu-latest
        # services:
        #     mongodb:
        #         image: mongo:latest
        #         ports:
        #             - 27017:27017
        #         options: >-
        #             --health-cmd "mongo --eval 'db.runCommand({ connectionStatus: 1 })'" 
        #             --health-interval 10s 
        #             --health-timeout 5s 
        #             --health-retries 5

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        -   name: Setup Node.js environment
            uses: actions/setup-node@v4
            with:
                node-version: 18
                cache: "npm"
                cache-dependency-path: ./package-lock.json

        -   name: Install Dependencies
            run: npm install

        -   name: Build application
            run: npm run build

        -   name: Copy credentials to .keys folder
            run: mkdir -p .keys && echo $GCP_CREDENTIALS > .keys/gcp-credentials.json
            env:
                GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

        -   name: Start MongoDB
            uses: supercharge/mongodb-github-action@1.11.0
            with:
                mongodb-version: latest
                mongodb-replica-set: rs

        -   name: Test application
            run: npm run test
        
        -   name: Authenticate with Google Cloud
            id: auth
            uses: google-github-actions/auth@v0
            with:
                credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

        -   name: Deploy to Cloud Run
            id: deploy
            uses: google-github-actions/deploy-cloudrun@v0
            with:
                service: ${{ env.SERVICE }}
                # image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}
                region: ${{ env.REGION }}
                project_id: ${{ env.PROJECT_ID }}
                env_vars: |-
                    MONGODB_URI=${{ secrets.MONGODB_URI }}
                source: ./

        -   name: Output the URL
            run: echo "The URL for the service is ${{ steps.deploy.outputs.url }}"